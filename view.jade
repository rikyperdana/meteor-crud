template(name='layout')
    head
        <meta name='viewport' content='width=device-width, initial-scale=1.0, user-scalable=no'/>
    body
        +menu
        +yield('fullWidth')
        .container
            +yield

template(name='menu')
    .navbar-fixed: nav.green: .nav-wrapper
        ul.left.hide-on-med-and-down
            li: a(href='/') Home
            li: a(href='/list') List
            if loggedIn
                li: a(href='/create') Create
            li: a(href='/map') Map
        a.button-collapse(data-activates='slide-out')
            i.mdi.mdi-menu
        a.brand-logo.center Meteor CRUD
        ul.right.hide-on-med-and-down
            unless loggedIn
                li: a(href='sign-in') Login
                li: a(href='sign-up') Register
            if loggedIn
                li: a= userEmail
                li: a(href='sign-out') Logout
    ul.side-nav#slide-out
        li: a(href='/') Home
        li: a(href='/list') List
        li: a(href='/create') Create
        li: .divider
        unless loggedIn
            li: a(href='sign-in') Login
            li: a(href='sign-up') Register
        if loggedIn
            li: a= userEmail
            li: a(href='sign-out') Logout

template(name='loading')
    .progress.center: .indeterminate

template(name='home')
    br
    .slider: ul.slides
        li
            img(src='http://lorempixel.com/580/250/nature/1')
            .caption.center-align
                h3 Meteor CRUD
                h5.light.grey-text.text-lighten-3 Only need 4 files for all of these
        li
            img(src='http://lorempixel.com/580/250/nature/2')
            .caption.left-align
                h3 Grab it on Github
                h5.light.grey-text.text-lighten-3 Read commits for learning
    .row
        .col.m6
            h5 Go and grab it
            p Welcome to Meteor CRUD sample. By cloning this repo from github you can learn many basic concepts of Meteor. Go to register, and try right away all features in this project. And yet we only need 3 coffee files and 1 jade file to create all of these.
        .col.m6
            h5 Learn the fun way
            p By using coffeescript and jade you'll learn Meteor in a fun way. We also use materialize css instead of bootstrap. And autoform to ease our job about form creation. For any other packages, you can read .meteor/packages

template(name='list')
    .row
        .col.m9
            h3 Data List
        .col.m3
            .input-field
                input#search(placeholder='Search')
    table.highlight
        thead
            tr
                th Name
                th Age
                th Address
                if actionable
                    th Action
        tbody
            each datas
                tr.rowData
                    td= name
                    td= age
                    td= address
                    if actionable
                        td
                            a.btn-flat.dropdown-button(data-activates='drop-{{_id}}')
                                i.mdi.mdi-menu
                            ul.dropdown-content(id='drop-{{_id}}')
                                li: a(href='/read/{{_id}}') Read
                                li: a(href='/update/{{_id}}') Update
                                li: a.openDeleteModal Delete
                            .modal(id='deleteModal-{{_id}}')
                                .modal-content
                                    h4 Delete?
                                    p Are you sure to delete this document?
                                .modal-footer
                                    a.modal-action.modal-close.btn.red.right.doRemove Agree
                                    a.modal-action.modal-close.btn.right Cancel
    if empty
        p There's no data to be displayed.

template(name='create')
    h3 Create Data
    +quickForm(
        collection = 'crud'
        schema = crudS
        type = 'insert'
        id = 'insertForm'
    )
    a.btn.orange.right(href='/list')
        i.mdi.mdi-keyboard-return

template(name='read')
    a.btn.right.orange.tooltipped.print(
        data-position = 'left'
        data-delay = '50'
        data-tooltip = 'Works on Chrome/Firefox'
    ) Print
    h3 Read Data
    br
    .row
        .col.m6
            with data
                table
                    tr
                        td: b Person Name
                        td= name
                    tr
                        td: b Person Age
                        td= age
                    tr
                        td: b Person Address
                        td= address
            +personMap
        .col.m6
            with file
                span: b Document:
                a(href='{{url}}' target='_blank')= name
            unless empty
                +c3(myChart)
            if empty
                p There's no chart data to be displayed.
    br
    if addDetail
        h4 Add detail
        +quickForm(
            collection = 'child'
            schema = childS
            type = 'insert'
            id = 'insertChild'
        )
        a.btn.red.right.addDetail Close
    br
    unless addDetail
       a.btn.blue.right.addDetail Add Detail
    h4 Details List
    table.striped.bordered
        thead
            tr
                th Title
                th Amount
                th Remove
        tbody
            each childs
                tr
                    td= title
                    td= amount
                    td: a.btn.red.removeDetail: i.mdi.mdi-close
            unless empty
                tr
                    td: b Total
                    td: b= totalAmount
    if empty
        p There's no details for this data
    a.btn.orange.right(href='/list')
        i.mdi.mdi-keyboard-return
    p .

template(name='update')
    h3 Update Data
    +quickForm(
        collection = 'crud'
        schema = crudS
        type = 'update'
        id = 'updateForm'
        doc = data
    )
    a.btn.orange.right(href='/list')
        i.mdi.mdi-keyboard-return

template(name='personMap')
    h5 Location
    #personMap

template(name='globalMap')
    #globalMap
